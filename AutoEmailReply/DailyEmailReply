import imaplib
import smtplib
import email
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
import config     # stores the email
from datetime import datetime, timedelta
import re

def extractEmail(content):
    email = re.search(r'\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}\b', content)

    if email:
        return email.group(0)

def extractName(content):
    name = re.search("(\w+)\s+(\w+)", content).group()
    return name

def getCandidateEmailnName(mgs):
    if msg.is_multipart():
        content = ''.join(part.get_payload(decode=True).decode() for part in msg.get_payload())
    else:
        content = msg.get_payload(decode=True).decode()
    for i in range(len(content)-10):
        if(content[i:i+4] == "Name"):
            candidate_name = extractName(content[i+6: i+30])

        if(content[i:i+5] == "Email"):
            candidate_email = extractEmail(content[i+6:i+30])
            break
    
    return (candidate_name, candidate_email)

# SMTP settings
smtp_server = 'smtp.gmail.com'
smtp_port = 587
smtp_username = config.USER
smtp_password = config.PASSWORD

# IMAP settings
mail = imaplib.IMAP4_SSL('imap.gmail.com')
mail.login(smtp_username, smtp_password)
mail.select('inbox')

# Search for emails with the desired subject line
since_date = (datetime.now() - timedelta(days=1)).strftime('%d-%b-%Y')
subject = 'Someone wants to help: Volunteer with us and maintain your OPT status!'

typ, data = mail.search(None, '(SUBJECT "{0}" SINCE {1})'.format(subject, since_date))

# Loop through each email and send a reply
for num in data[0].split():
    typ, msg_data = mail.fetch(num, '(RFC822)')
    msg_str = msg_data[0][1].decode('utf-8')
    msg = email.message_from_string(msg_str)
    
    candidate_name, toEmail = getCandidateEmailnName(msg)
    toEmail = "daiexample04@gmail.com"
    # Extract the sender's email address
    sender_email = msg['From']

    # Compose the reply message
    reply_subject = 'Thank you for your interest!'

    # parallel reply email
    reply_name = 'Hi, {0}.'.format(candidate_name)
    reply_booking = "Please use this link to schedule an appointment: {0}".format(config.CALENDLY_LINK)

    # create http email content
    message = MIMEMultipart()
    message["From"] = smtp_username
    message["To"] = sender_email
    message["Subject"] = reply_subject

    html = """
    <html>
        <body>
            <p>{0}</p><br>
            <p>{1}</p>
        </body>
    </html>
    """.format(reply_name, reply_booking)

    # Add HTML content to message body
    body = MIMEText(html, "html")
    message.attach(body)

    # Send the reply message
    with smtplib.SMTP(smtp_server, smtp_port) as server:
        server.starttls()
        server.login(smtp_username, smtp_password)
        server.sendmail(smtp_username, sender_email, message.as_string())

# Close the connection to the mail server
mail.close()
mail.logout()
